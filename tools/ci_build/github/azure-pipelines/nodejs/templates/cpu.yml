parameters:
  DoEsrp: 'false'
  DoCompliance: 'false'
  BuildCSharp: 'false'

jobs:
- template: ../../templates/win-ci-2019.yml
  parameters:
    AgentPool : 'Win-CPU-2019'
    ArtifactName: 'drop-nodejs-win32'
    JobName: 'Windows_CI'
    BuildCommand:  '--build_dir $(Build.BinariesDirectory) --skip_submodule_sync --use_openmp --build_nodejs --enable_onnx_tests --enable_wcos --cmake_generator "Visual Studio 16 2019"'
    BuildArch: 'x64'
    EnvSetupScript: 'setup_env.bat'
    sln_platform: 'x64'
    DoDebugBuild: 'false'
    DoNodejsPack : 'true'
    DoNugetPack: 'false'
    DoEsrp: ${{ parameters.DoEsrp }}
    DoCompliance: ${{ parameters.DoCompliance }}
    BuildCSharp: ${{ parameters.BuildCSharp }}

- template: ../../templates/mac-ci.yml
  parameters:
    AgentPool : $(AgentPoolMacOS)
    ArtifactName: 'drop-nodejs-darwin'
    JobName: 'Mac_CI_Release'
    BuildCommand: 'python3 $(Build.SourcesDirectory)/tools/ci_build/build.py --use_openmp --build_dir $(Build.BinariesDirectory) --skip_submodule_sync --use_featurizers --parallel --build_nodejs --config Release'
    DoNodejsPack : 'true'
    DoNugetPack: 'false'
    DoEsrp: ${{ parameters.DoEsrp }}

- template: ../../templates/linux-ci.yml
  parameters:
    AgentPool : 'Linux-CPU'
    ArtifactName: 'drop-nodejs-linux'
    JobName: 'Linux_CI'
    BuildCommand: 'tools/ci_build/github/linux/run_dockerbuild.sh -o ubuntu16.04 -d cpu -r $(Build.BinariesDirectory) -x "--use_mklml --use_llvm --use_nuphar --use_dnnl --use_tvm --build_nodejs --enable_language_interop_ops --use_featurizers"'
    DoNodejsPack : 'true'
    DoNugetPack:  'false'
